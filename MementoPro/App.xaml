<Application x:Class="MementoPro.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Startup="App_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                    xmlns:viewmodels="clr-namespace:MementoPro.ViewModels"
                                    xmlns:views="clr-namespace:MementoPro.Views">
                    <DataTemplate DataType="{x:Type viewmodels:AuthVM}">
                        <views:AuthView/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewmodels:RegVM}">
                        <views:RegView/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewmodels:MainVM}">
                        <views:MainView/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewmodels:UserMenuVM}">
                        <views:UserMenuView/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewmodels:ChooseRegFormVM}">
                        <views:ChooseRegFormView/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewmodels:PersonalRegFormVM}">
                        <views:PersonalRegFormView/>
                    </DataTemplate>
                </ResourceDictionary>

                <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

                    <Style TargetType="Window" x:Key="WindowFontStyle">
                        <Setter Property="FontFamily" Value="Comic Sans MS"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>

                    <Style TargetType="UserControl" x:Key="UserControlFontStyle">
                        <Setter Property="FontFamily" Value="Comic Sans MS"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>

                    <Thickness x:Key="LeftThickness" Left="10"/>
                    <Thickness x:Key="TopThickness" Top="10"/>
                    <Thickness x:Key="RightThickness" Right="10"/>
                    <Thickness x:Key="BottomThickness" Bottom="10"/>

                    <Thickness x:Key="LeftTopThickness" Left="10" Top="10"/>
                    <Thickness x:Key="LeftBottomThickness" Left="10" Bottom="10"/>
                    <Thickness x:Key="RightTopThickness" Right="10" Top="10"/>
                    <Thickness x:Key="RightBottomThickness" Right="10" Bottom="10"/>

                    <Thickness x:Key="AllSidesThickness" Left="10" Top="10" Right="10" Bottom="10"/>

                    <Style x:Key="ButtonStyleBase" TargetType="Button">
                        <Setter Property="Padding" Value="5 2.5"/>
                    </Style>

                    <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyleBase}">
                        <Setter Property="Padding" Value="5 2.5"/>
                        <Setter Property="BorderBrush" Value="DarkOrange"/>
                        <Setter Property="Background" Value="Orange"/>
                    </Style>

                    <Style x:Key="TransparentButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyleBase}">
                        <Setter Property="Padding" Value="5 2.5"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Style>

                    <!--<Style x:Key="TextBoxStyle" TargetType="TextBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border BorderThickness="0.5"
                                            BorderBrush="Black"
                                            CornerRadius="2.5"
                                            Padding="2.5"
                                            Background="White">
                                        <TextBox BorderThickness="0"
                                                 Background="Transparent">
                                            <TextBox.Style>
                                                <Style/>
                                            </TextBox.Style>
                                        </TextBox>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>-->

                    <Style x:Key="TextBoxInErrorStyle" TargetType="TextBox">
                        <Setter Property="Margin" Value="10 10 10 22.5"/>
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="Placeholder"/>
                                        <TextBlock Text="{Binding ElementName=Placeholder,
                                                                    Path=AdornedElement.(Validation.Errors)/ErrorContent}"
                                                   Margin="0 2.5 0 0"
                                                   FontSize="14"
                                                   Foreground="Red"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ErrorInTooltipStyle" TargetType="FrameworkElement">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self},
                                                        Path=(Validation.Errors)/ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
